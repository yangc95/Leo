* {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
}

ol,
ul {
  list-style: none;
}

html {
  display: flex;
  flex-direction: column;
  align-items: center;
}

body {
  margin-top: 10vh;
  width: max-content;
  color: white;
  background-color: #1f1f1f;
  font-family: monospace;
  display: flex;
  flex-direction: column;
}

h1 {
  align-self: center;
  font-size: 30px;
}

a.play-button {
  position: fixed;
  transform: translate(5.3em, 5em);
  font-size: 40px;
  text-decoration: none;
}

#start-play {
  margin: 1em;
  padding: 2em;
  border-radius: 10px;
  background-color: white;
  border: 2px solid black;
  transform: translate(5.2em, 25em);
  width: 22em;
  height: 6.5%;
  position: fixed;
  color: black;
  display: flex;
  flex-direction: column;
  animation: start 2s steps(30, end);
}
#start-play p {
  position: sticky;
  white-space: nowrap;
  overflow: hidden;
  opacity: 0;
  font-size: 14px;
}
#start-play .one {
  animation: start 2s steps(30, end);
  visibility: unset;
  animation-fill-mode: forwards;
}
#start-play .two {
  animation: start 2s steps(30, end);
  animation-delay: 1.5s;
  visibility: unset;
  animation-fill-mode: forwards;
}
#start-play .three {
  animation: start 2s steps(30, end);
  animation-delay: 3s;
  animation-fill-mode: forwards;
}

@keyframes snap {
  0% {
    transform: translateX(0px);
  }
}
@keyframes start {
  from {
    width: 0%;
    opacity: unset;
  }
  to {
    width: 22em;
    opacity: unset;
  }
}
footer {
  background-color: black;
  border-radius: 5px;
  border: 1px solid white;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 1em;
}

div.social-footer {
  height: 3em;
  font-size: large;
}
div.social-footer h1 {
  font-size: 16px;
}
div.social-footer h2 {
  font-size: 12px;
}

.directions {
  color: white;
}

canvas {
  border-radius: 5px;
  border: 1px solid white;
  background-color: #9ff4ff;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNldC5zY3NzIiwid2VicGFjazovLy8uL2luZGV4LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYm9keS5zY3NzIiwid2VicGFjazovLy8uL2Zvb3Rlci5zY3NzIiwid2VicGFjazovLy8uL2NhbnZhcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBQ0NKOztBREVBOztFQUVJO0FDQ0o7O0FDWEE7RUFDSTtFQUNBO0VBQ0E7QURjSjs7QUNYQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBRUE7RUFDQTtFQUNBO0FEYUo7O0FDVkE7RUFDSTtFQUNBO0FEYUo7O0FDVkE7RUFFSTtFQUNBO0VBQ0E7RUFDQTtBRFlKOztBQ1RBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QURZSjtBQ1ZJO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBRFlSO0FDTEk7RUFDSTtFQUNBO0VBQ0E7QURPUjtBQ0pJO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7QURNUjtBQ0hJO0VBQ0k7RUFDQTtFQUNBO0FES1I7O0FDQ0E7RUFDSTtJQUNJO0VERU47QUFDRjtBQ0NBO0VBQ0k7SUFDSTtJQUNBO0VEQ047RUNFRTtJQUNJO0lBQ0E7RURBTjtBQUNGO0FFOUZBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUZnR0o7O0FFN0ZBO0VBQ0k7RUFDQTtBRmdHSjtBRTlGSTtFQUNJO0FGZ0dSO0FFNUZJO0VBQ0k7QUY4RlI7O0FFMUZBO0VBQ0k7QUY2Rko7O0FHdEhBO0VBQ0k7RUFDQTtFQUNBO0FIeUhKLEMiLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIqIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3JkZXI6IDA7XG4gICAgZm9udC1zaXplOiAxMDAlO1xuICAgIGZvbnQ6IGluaGVyaXQ7XG59XG5cbm9sLFxudWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG59IiwiKiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBmb250LXNpemU6IDEwMCU7XG4gIGZvbnQ6IGluaGVyaXQ7XG59XG5cbm9sLFxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5odG1sIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuYm9keSB7XG4gIG1hcmdpbi10b3A6IDEwdmg7XG4gIHdpZHRoOiBtYXgtY29udGVudDtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWYxZjFmO1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG5oMSB7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgZm9udC1zaXplOiAzMHB4O1xufVxuXG5hLnBsYXktYnV0dG9uIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSg1LjNlbSwgNWVtKTtcbiAgZm9udC1zaXplOiA0MHB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbiNzdGFydC1wbGF5IHtcbiAgbWFyZ2luOiAxZW07XG4gIHBhZGRpbmc6IDJlbTtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSg1LjJlbSwgMjVlbSk7XG4gIHdpZHRoOiAyMmVtO1xuICBoZWlnaHQ6IDYuNSU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgY29sb3I6IGJsYWNrO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbmltYXRpb246IHN0YXJ0IDJzIHN0ZXBzKDMwLCBlbmQpO1xufVxuI3N0YXJ0LXBsYXkgcCB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG9wYWNpdHk6IDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cbiNzdGFydC1wbGF5IC5vbmUge1xuICBhbmltYXRpb246IHN0YXJ0IDJzIHN0ZXBzKDMwLCBlbmQpO1xuICB2aXNpYmlsaXR5OiB1bnNldDtcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG59XG4jc3RhcnQtcGxheSAudHdvIHtcbiAgYW5pbWF0aW9uOiBzdGFydCAycyBzdGVwcygzMCwgZW5kKTtcbiAgYW5pbWF0aW9uLWRlbGF5OiAxLjVzO1xuICB2aXNpYmlsaXR5OiB1bnNldDtcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG59XG4jc3RhcnQtcGxheSAudGhyZWUge1xuICBhbmltYXRpb246IHN0YXJ0IDJzIHN0ZXBzKDMwLCBlbmQpO1xuICBhbmltYXRpb24tZGVsYXk6IDNzO1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbn1cblxuQGtleWZyYW1lcyBzbmFwIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwcHgpO1xuICB9XG59XG5Aa2V5ZnJhbWVzIHN0YXJ0IHtcbiAgZnJvbSB7XG4gICAgd2lkdGg6IDAlO1xuICAgIG9wYWNpdHk6IHVuc2V0O1xuICB9XG4gIHRvIHtcbiAgICB3aWR0aDogMjJlbTtcbiAgICBvcGFjaXR5OiB1bnNldDtcbiAgfVxufVxuZm9vdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwYWRkaW5nOiAxZW07XG59XG5cbmRpdi5zb2NpYWwtZm9vdGVyIHtcbiAgaGVpZ2h0OiAzZW07XG4gIGZvbnQtc2l6ZTogbGFyZ2U7XG59XG5kaXYuc29jaWFsLWZvb3RlciBoMSB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbmRpdi5zb2NpYWwtZm9vdGVyIGgyIHtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4uZGlyZWN0aW9ucyB7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuY2FudmFzIHtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzlmZjRmZjtcbn0iLCJodG1sIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuYm9keSB7XG4gICAgbWFyZ2luLXRvcDogMTB2aDtcbiAgICB3aWR0aDogbWF4LWNvbnRlbnQ7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigzMSwgMzEsIDMxKTtcbiAgICAvLyBmb250LWZhbWlseTogJ1F1ZXN0cmlhbCcsc2Fucy1zZXJpZjtcbiAgICBmb250LWZhbWlseTogbW9ub3NwYWNlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuaDEge1xuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDMwcHg7XG59XG5cbmEucGxheS1idXR0b24ge1xuICAgIC8vIG9wYWNpdHk6IHVuc2V0O1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSg1LjNlbSwgNWVtKTtcbiAgICBmb250LXNpemU6IDQwcHg7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4jc3RhcnQtcGxheSB7XG4gICAgbWFyZ2luOiAxZW07XG4gICAgcGFkZGluZzogMmVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoNS4yZW0sIDI1ZW0pO1xuICAgIHdpZHRoOiAyMmVtO1xuICAgIGhlaWdodDogNi41JTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbmltYXRpb246IHN0YXJ0IDJzIHN0ZXBzKDMwLCBlbmQpO1xuICAgIFxuICAgIHAge1xuICAgICAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgfVxuXG4gICAgLy8gbmVlZCB0byBmaWd1cmUgb3V0IGEgd2F5IHRvIGF1dG9tYXRlIHRoZXNlXG4gICAgLy8gYW5pbWF0aW9ucyBzbyB0aGF0IHlvdSBjYW4gYWRkIGFzIG11Y2ggc3RvcnlcbiAgICAvLyB0ZXh0P1xuICAgIFxuICAgIC5vbmUge1xuICAgICAgICBhbmltYXRpb246IHN0YXJ0IDJzIHN0ZXBzKDMwLCBlbmQpO1xuICAgICAgICB2aXNpYmlsaXR5OiB1bnNldDtcbiAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgfVxuXG4gICAgLnR3byB7XG4gICAgICAgIGFuaW1hdGlvbjogc3RhcnQgMnMgc3RlcHMoMzAsIGVuZCk7XG4gICAgICAgIGFuaW1hdGlvbi1kZWxheTogMS41cztcbiAgICAgICAgdmlzaWJpbGl0eTogdW5zZXQ7XG4gICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICAgIH1cblxuICAgIC50aHJlZSB7XG4gICAgICAgIGFuaW1hdGlvbjogc3RhcnQgMnMgc3RlcHMoMzAsIGVuZCk7XG4gICAgICAgIGFuaW1hdGlvbi1kZWxheTogM3M7XG4gICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICAgIH1cbn1cblxuLnBsYXktYnV0dG9uOmhvdmVyIHtcbn1cbkBrZXlmcmFtZXMgc25hcCB7XG4gICAgMCUge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMHB4KSA7XG4gICAgfVxufVxuXG5Aa2V5ZnJhbWVzIHN0YXJ0IHtcbiAgICBmcm9tIHtcbiAgICAgICAgd2lkdGg6IDAlO1xuICAgICAgICBvcGFjaXR5OiB1bnNldDtcbiAgICB9XG5cbiAgICB0byB7XG4gICAgICAgIHdpZHRoOiAyMmVtO1xuICAgICAgICBvcGFjaXR5OiB1bnNldDtcbiAgICB9XG59IiwiZm9vdGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHBhZGRpbmc6IDFlbTtcbn1cblxuZGl2LnNvY2lhbC1mb290ZXIge1xuICAgIGhlaWdodDogM2VtO1xuICAgIGZvbnQtc2l6ZTogbGFyZ2U7XG5cbiAgICBoMSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgLy8gY29sb3I6IHdoaXRlO1xuICAgIH1cblxuICAgIGgyIHtcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgIH1cbn1cblxuLmRpcmVjdGlvbnMge1xuICAgIGNvbG9yOiB3aGl0ZTtcbn0iLCJjYW52YXMge1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTU5LCAyNDQsIDI1NSk7XG4gICAgLy8gaW1hZ2UtcmVuZGVyaW5nOiAtbW96LWNyaXNwLWVkZ2VzO1xuICAgIC8vIGltYWdlLXJlbmRlcmluZzogLXdlYmtpdC1jcmlzcC1lZGdlcztcbiAgICAvLyBpbWFnZS1yZW5kZXJpbmc6IHBpeGVsYXRlZDtcbiAgICAvLyBpbWFnZS1yZW5kZXJpbmc6IGNyaXNwLWVkZ2VzO1xufVxuXG4iXSwic291cmNlUm9vdCI6IiJ9*/