* {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
}

ol,
ul {
  list-style: none;
}

html {
  display: flex;
  flex-direction: column;
  align-items: center;
}

body {
  margin-top: 10vh;
  width: max-content;
  color: white;
  background-color: #1f1f1f;
  font-family: monospace;
  display: flex;
  flex-direction: column;
}

h1 {
  align-self: center;
  font-size: 30px;
}

a.play-button {
  transform: translate(0, 7em);
  font-size: 40px;
  font-weight: bold;
  text-decoration: none;
  transition: 0.5s linear;
  display: flex;
  align-items: center;
  justify-content: center;
}

a.play-button:hover span:nth-child(1) {
  margin-right: 5px;
}

a.play-button:hover span:nth-child(1):after {
  content: "'";
}

a.play-button:hover span:nth-child(2) {
  margin-left: 30px;
}

a.play-button:hover {
  color: #fff;
  text-shadow: 0 0 10px #e6c764, 0 0 20px #fff, 0 0 40px #fff;
}

#start-play {
  margin: 1em;
  padding: 2em;
  border-radius: 10px;
  background-color: white;
  border: 2px solid black;
  transform: translate(5.2em, 25em);
  width: 22em;
  height: 6.5%;
  position: fixed;
  color: black;
  display: flex;
  flex-direction: column;
  animation: start 2s steps(30, end);
}
#start-play p {
  position: sticky;
  white-space: nowrap;
  overflow: hidden;
  opacity: 0;
  font-size: 14px;
}
#start-play .one {
  animation: start 2s steps(30, end);
  visibility: unset;
  animation-fill-mode: forwards;
}
#start-play .two {
  animation: start 2s steps(30, end);
  animation-delay: 1.5s;
  visibility: unset;
  animation-fill-mode: forwards;
}
#start-play .three {
  animation: start 2s steps(30, end);
  animation-delay: 3s;
  animation-fill-mode: forwards;
}

@keyframes snap {
  0% {
    transform: translateX(0px);
  }
}
@keyframes start {
  from {
    width: 0%;
    opacity: unset;
  }
  to {
    width: 22em;
    opacity: unset;
  }
}
footer {
  background-color: black;
  border-radius: 5px;
  border: 1px solid white;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 1em;
}

div.social-footer {
  height: 3em;
  font-size: large;
}
div.social-footer h1 {
  font-size: 16px;
}
div.social-footer h2 {
  font-size: 12px;
}

.directions {
  color: white;
}

canvas {
  border-radius: 5px;
  border: 1px solid white;
  background-image: url(images/cloudz.gif);
  background-repeat: no-repeat;
  background-size: cover;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNldC5zY3NzIiwid2VicGFjazovLy8uL2luZGV4LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYm9keS5zY3NzIiwid2VicGFjazovLy8uL2Zvb3Rlci5zY3NzIiwid2VicGFjazovLy8uL2NhbnZhcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBQ0NKOztBREVBOztFQUVJO0FDQ0o7O0FDWEE7RUFDSTtFQUNBO0VBQ0E7QURjSjs7QUNYQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBRUE7RUFDQTtFQUNBO0FEYUo7O0FDVkE7RUFDSTtFQUNBO0FEYUo7O0FDVkE7RUFHSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FEV0o7O0FDUkE7RUFDSTtBRFdKOztBQ1JBO0VBQ0k7QURXSjs7QUNSQTtFQUNJO0FEV0o7O0FDUkE7RUFFSTtFQUNBO0FEVUo7O0FDTEE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBRFFKO0FDTkk7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FEUVI7QUNESTtFQUNJO0VBQ0E7RUFDQTtBREdSO0FDQUk7RUFDSTtFQUNBO0VBQ0E7RUFDQTtBREVSO0FDQ0k7RUFDSTtFQUNBO0VBQ0E7QURDUjs7QUNLQTtFQUNJO0lBQ0k7RURGTjtBQUNGO0FDS0E7RUFDSTtJQUNJO0lBQ0E7RURITjtFQ01FO0lBQ0k7SUFDQTtFREpOO0FBQ0Y7QUVuSEE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBRnFISjs7QUVsSEE7RUFDSTtFQUNBO0FGcUhKO0FFbkhJO0VBQ0k7QUZxSFI7QUVqSEk7RUFDSTtBRm1IUjs7QUUvR0E7RUFDSTtBRmtISjs7QUczSUE7RUFDSTtFQUNBO0VBRUE7RUFDQTtFQUNBO0FINklKLEMiLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIqIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3JkZXI6IDA7XG4gICAgZm9udC1zaXplOiAxMDAlO1xuICAgIGZvbnQ6IGluaGVyaXQ7XG59XG5cbm9sLFxudWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG59IiwiKiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBmb250LXNpemU6IDEwMCU7XG4gIGZvbnQ6IGluaGVyaXQ7XG59XG5cbm9sLFxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5odG1sIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuYm9keSB7XG4gIG1hcmdpbi10b3A6IDEwdmg7XG4gIHdpZHRoOiBtYXgtY29udGVudDtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWYxZjFmO1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG5oMSB7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgZm9udC1zaXplOiAzMHB4O1xufVxuXG5hLnBsYXktYnV0dG9uIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgN2VtKTtcbiAgZm9udC1zaXplOiA0MHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0cmFuc2l0aW9uOiAwLjVzIGxpbmVhcjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbmEucGxheS1idXR0b246aG92ZXIgc3BhbjpudGgtY2hpbGQoMSkge1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbn1cblxuYS5wbGF5LWJ1dHRvbjpob3ZlciBzcGFuOm50aC1jaGlsZCgxKTphZnRlciB7XG4gIGNvbnRlbnQ6IFwiJ1wiO1xufVxuXG5hLnBsYXktYnV0dG9uOmhvdmVyIHNwYW46bnRoLWNoaWxkKDIpIHtcbiAgbWFyZ2luLWxlZnQ6IDMwcHg7XG59XG5cbmEucGxheS1idXR0b246aG92ZXIge1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IDAgMCAxMHB4ICNlNmM3NjQsIDAgMCAyMHB4ICNmZmYsIDAgMCA0MHB4ICNmZmY7XG59XG5cbiNzdGFydC1wbGF5IHtcbiAgbWFyZ2luOiAxZW07XG4gIHBhZGRpbmc6IDJlbTtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSg1LjJlbSwgMjVlbSk7XG4gIHdpZHRoOiAyMmVtO1xuICBoZWlnaHQ6IDYuNSU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgY29sb3I6IGJsYWNrO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbmltYXRpb246IHN0YXJ0IDJzIHN0ZXBzKDMwLCBlbmQpO1xufVxuI3N0YXJ0LXBsYXkgcCB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG9wYWNpdHk6IDA7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cbiNzdGFydC1wbGF5IC5vbmUge1xuICBhbmltYXRpb246IHN0YXJ0IDJzIHN0ZXBzKDMwLCBlbmQpO1xuICB2aXNpYmlsaXR5OiB1bnNldDtcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG59XG4jc3RhcnQtcGxheSAudHdvIHtcbiAgYW5pbWF0aW9uOiBzdGFydCAycyBzdGVwcygzMCwgZW5kKTtcbiAgYW5pbWF0aW9uLWRlbGF5OiAxLjVzO1xuICB2aXNpYmlsaXR5OiB1bnNldDtcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG59XG4jc3RhcnQtcGxheSAudGhyZWUge1xuICBhbmltYXRpb246IHN0YXJ0IDJzIHN0ZXBzKDMwLCBlbmQpO1xuICBhbmltYXRpb24tZGVsYXk6IDNzO1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbn1cblxuQGtleWZyYW1lcyBzbmFwIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwcHgpO1xuICB9XG59XG5Aa2V5ZnJhbWVzIHN0YXJ0IHtcbiAgZnJvbSB7XG4gICAgd2lkdGg6IDAlO1xuICAgIG9wYWNpdHk6IHVuc2V0O1xuICB9XG4gIHRvIHtcbiAgICB3aWR0aDogMjJlbTtcbiAgICBvcGFjaXR5OiB1bnNldDtcbiAgfVxufVxuZm9vdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwYWRkaW5nOiAxZW07XG59XG5cbmRpdi5zb2NpYWwtZm9vdGVyIHtcbiAgaGVpZ2h0OiAzZW07XG4gIGZvbnQtc2l6ZTogbGFyZ2U7XG59XG5kaXYuc29jaWFsLWZvb3RlciBoMSB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbmRpdi5zb2NpYWwtZm9vdGVyIGgyIHtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4uZGlyZWN0aW9ucyB7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuY2FudmFzIHtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2Fzc2V0cy9pbWFnZXMvbWFwL2Nsb3Vkei5naWYpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufSIsImh0bWwge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG5ib2R5IHtcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xuICAgIHdpZHRoOiBtYXgtY29udGVudDtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDMxLCAzMSwgMzEpO1xuICAgIC8vIGZvbnQtZmFtaWx5OiAnUXVlc3RyaWFsJyxzYW5zLXNlcmlmO1xuICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG5oMSB7XG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMzBweDtcbn1cblxuYS5wbGF5LWJ1dHRvbiB7XG4gICAgLy8gb3BhY2l0eTogdW5zZXQ7XG4gICAgLy8gcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDdlbSk7XG4gICAgZm9udC1zaXplOiA0MHB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB0cmFuc2l0aW9uOiAwLjVzIGxpbmVhcjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbmEucGxheS1idXR0b246aG92ZXIgc3BhbjpudGgtY2hpbGQoMSkge1xuICAgIG1hcmdpbi1yaWdodDogNXB4XG59XG5cbmEucGxheS1idXR0b246aG92ZXIgc3BhbjpudGgtY2hpbGQoMSk6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiJ1wiO1xufVxuXG5hLnBsYXktYnV0dG9uOmhvdmVyIHNwYW46bnRoLWNoaWxkKDIpIHtcbiAgICBtYXJnaW4tbGVmdDogMzBweFxufVxuXG5hLnBsYXktYnV0dG9uOmhvdmVyIHtcbiAgICAvLyB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgzLjNlbSwgNWVtKTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICB0ZXh0LXNoYWRvdzogMCAwIDEwcHggcmdiKDIzMCwgMTk5LCAxMDApLFxuICAgICAgICAgICAgICAgICAwIDAgMjBweCAjZmZmLFxuICAgICAgICAgICAgICAgICAwIDAgNDBweCAjZmZmO1xufVxuXG4jc3RhcnQtcGxheSB7XG4gICAgbWFyZ2luOiAxZW07XG4gICAgcGFkZGluZzogMmVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoNS4yZW0sIDI1ZW0pO1xuICAgIHdpZHRoOiAyMmVtO1xuICAgIGhlaWdodDogNi41JTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbmltYXRpb246IHN0YXJ0IDJzIHN0ZXBzKDMwLCBlbmQpO1xuICAgIFxuICAgIHAge1xuICAgICAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgfVxuXG4gICAgLy8gbmVlZCB0byBmaWd1cmUgb3V0IGEgd2F5IHRvIGF1dG9tYXRlIHRoZXNlXG4gICAgLy8gYW5pbWF0aW9ucyBzbyB0aGF0IHlvdSBjYW4gYWRkIGFzIG11Y2ggc3RvcnlcbiAgICAvLyB0ZXh0P1xuICAgIFxuICAgIC5vbmUge1xuICAgICAgICBhbmltYXRpb246IHN0YXJ0IDJzIHN0ZXBzKDMwLCBlbmQpO1xuICAgICAgICB2aXNpYmlsaXR5OiB1bnNldDtcbiAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgfVxuXG4gICAgLnR3byB7XG4gICAgICAgIGFuaW1hdGlvbjogc3RhcnQgMnMgc3RlcHMoMzAsIGVuZCk7XG4gICAgICAgIGFuaW1hdGlvbi1kZWxheTogMS41cztcbiAgICAgICAgdmlzaWJpbGl0eTogdW5zZXQ7XG4gICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICAgIH1cbiAgICBcbiAgICAudGhyZWUge1xuICAgICAgICBhbmltYXRpb246IHN0YXJ0IDJzIHN0ZXBzKDMwLCBlbmQpO1xuICAgICAgICBhbmltYXRpb24tZGVsYXk6IDNzO1xuICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbiAgICB9XG59XG5cbi5wbGF5LWJ1dHRvbjpob3ZlciB7XG59XG5Aa2V5ZnJhbWVzIHNuYXAge1xuICAgIDAlIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDBweCkgO1xuICAgIH1cbn1cblxuQGtleWZyYW1lcyBzdGFydCB7XG4gICAgZnJvbSB7XG4gICAgICAgIHdpZHRoOiAwJTtcbiAgICAgICAgb3BhY2l0eTogdW5zZXQ7XG4gICAgfVxuXG4gICAgdG8ge1xuICAgICAgICB3aWR0aDogMjJlbTtcbiAgICAgICAgb3BhY2l0eTogdW5zZXQ7XG4gICAgfVxufSIsImZvb3RlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAxZW07XG59XG5cbmRpdi5zb2NpYWwtZm9vdGVyIHtcbiAgICBoZWlnaHQ6IDNlbTtcbiAgICBmb250LXNpemU6IGxhcmdlO1xuXG4gICAgaDEge1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIC8vIGNvbG9yOiB3aGl0ZTtcbiAgICB9XG5cbiAgICBoMiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB9XG59XG5cbi5kaXJlY3Rpb25zIHtcbiAgICBjb2xvcjogd2hpdGU7XG59IiwiY2FudmFzIHtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XG4gICAgLy8gYmFja2dyb3VuZC1jb2xvcjogcmdiKDE1OSwgMjQ0LCAyNTUpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9hc3NldHMvaW1hZ2VzL21hcC9jbG91ZHouZ2lmKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgLy8gaW1hZ2UtcmVuZGVyaW5nOiAtbW96LWNyaXNwLWVkZ2VzO1xuICAgIC8vIGltYWdlLXJlbmRlcmluZzogLXdlYmtpdC1jcmlzcC1lZGdlcztcbiAgICAvLyBpbWFnZS1yZW5kZXJpbmc6IHBpeGVsYXRlZDtcbiAgICAvLyBpbWFnZS1yZW5kZXJpbmc6IGNyaXNwLWVkZ2VzO1xufVxuXG4iXSwic291cmNlUm9vdCI6IiJ9*/