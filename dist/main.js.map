{"version":3,"file":"main.js","mappings":"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","sources":["webpack://leo/./src/scripts/map_ele/houses.js","webpack://leo/./src/scripts/story.js","webpack://leo/./src/index.js","webpack://leo/./src/scripts/game.js","webpack://leo/./src/scripts/map.js","webpack://leo/./src/scripts/leo.js","webpack://leo/./src/scripts/util.js"],"sourcesContent":["class Houses {\n    constructor(xPos, yPos, magnify, ctx) {\n        this.xPos = xPos;\n        this.yPos = yPos;\n        this.magnify = magnify;\n        this.ctx = ctx;\n        this.xCollision = this.xPos - this.baseWidth;\n        this.yCollision = this.yPos - this.baseHeight;\n        this.house = new Image();\n    }\n}\n\nexport default Houses;\n","class Story {\n    constructor(leo, map) {\n        this.leo = leo;\n        this.map = map;\n        this.storyline = {\n            foundPolly: false, \n            foundHewert: false \n        };\n        this.currentPos = {\n            map: true,\n            pollysHouse: false,\n            hewertsHouse: false\n        };\n    }\n\n    storylines () {\n        // Storyline here\n    }\n}\n\nexport default Story;\n","import \"./styles/index.scss\";\nimport Game from './scripts/game';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const instructions = document.querySelector(\"#start-play\")\n  const playButton = document.querySelector(\"a.play-button\");\n  const restartButton = document.querySelector(\"a.restart-button\");\n\n  const canvasEl = document.getElementById(\"mycanvas\");\n  const ctx = canvasEl.getContext(\"2d\");\n  canvasEl.width = 500;\n  canvasEl.height = 500;\n  ctx.imageSmoothingEnabled = false;\n  \n  const game = new Game(canvasEl.width, canvasEl.height, ctx);\n  \n  function animate() {\n    console.log('animate')\n    if (game.won()) {\n      window.cancelAnimationFrame(window.animationId);\n      game.restart();\n      return;\n    }\n    \n    ctx.clearRect(0, 0, canvasEl.width, canvasEl.height);\n    game.draw();\n    game.render();\n    requestAnimationFrame(animate);\n  }\n\n  playButton.addEventListener('click', () => {\n    playButton.style.visibility = 'hidden'\n    instructions.style.visibility = 'hidden';\n    animate();\n  });\n\n  restartButton.addEventListener('click', () => {\n    restart.Buttonstyle.visibility = 'visible';\n  });\n});\n","import Map from './map';\nimport Leo from './leo';\nimport Story from './story';\nimport Util from './util';\n\nclass Game {\n    constructor(canvasElWidth, canvasElHeight, ctx) {\n        this.canvasElWidth = canvasElWidth;\n        this.canvasElHeight = canvasElHeight;\n        this.ctx = ctx;\n        this.map = new Map(canvasElWidth, canvasElHeight, this.ctx);\n        this.leo = new Leo(canvasElWidth / 2, canvasElHeight / 2, this.ctx);\n        this.story = new Story(this.leo, this.map);\n        this.points = 0;\n        new Util (this.leo, this);\n    };\n    \n    draw() {\n        this.map.draw(\n            this.ctx, \n            this.canvasElWidth, \n            this.canvasElHeight\n        );\n        this.leo.draw();\n    }\n    \n    render() {\n        let leoDx = (this.canvasElWidth / 2) - this.leo.x\n        let leoDy = (this.canvasElHeight / 2) - this.leo.y\n        this.map.render(leoDx, leoDy);\n        this.leo.render();\n    }\n\n    won() {\n        if (this.story.storyline.foundHewert) {\n            return true;\n        }\n        return false;\n    }\n\n    restart() {\n      this.points = 0;\n      this.story = new Story(this.leo, this.map);\n    }\n}\n\nexport default Game;\n","import Houses from './map_ele/houses';\nimport Shrubs from './map_ele/shrubs';\n\nclass Map {\n    constructor(width, height, ctx) {\n        this.width = width;\n        this.height = height;\n        this.ctx = ctx;\n        this.magnify = 5;\n        this.xPos = 0;\n        this.yPos = 0;\n        this.map = new Image();\n        this.map.src = \"src/assets/images/map/bgMap.png\";\n        this.house = new Houses(this.xPos, this.yPos, this.magnify, this.ctx);\n    }\n    \n    draw(ctx) {\n        let mapSize = this.width * this.magnify;\n        ctx.drawImage(\n            this.map, \n            0, 0, \n            this.map.width, \n            this.map.height, \n            this.xPos - this.map.width, \n            this.yPos - this.map.height, \n            mapSize, mapSize\n        );\n    }\n\n    render(leoDx, leoDy) {\n        this.xPos = leoDx;\n        this.yPos = leoDy;\n    }\n}\n\nexport default Map;\n","class Leo {\n    constructor(x, y, ctx) {\n        this.leo = new Image();\n        this.leo.src = \"src/assets/images/sprite/LeoWalkCycle.png\";\n        this.x = x;\n        this.y = y;\n        this.ctx = ctx;\n\n        this.size = 100;\n        this.dir = 0;\n        this.trotting = 0;\n        this.speed = 0.1;\n\n        this.right = false;\n        this.left = false;\n        this.down = false;\n        this.up = false;\n    }\n\n    draw() {\n        let spriteSize = this.size / 4;\n        let trot = Math.floor(this.trotting % 4);\n        this.ctx.drawImage(this.leo, trot * spriteSize, this.dir * spriteSize, spriteSize, spriteSize, 200, 200, this.size, this.size);   \n    }\n\n    render() {\n        const dir = {\n            \"right\": 0,\n            \"left\": 1,\n            \"down\": 2,\n            \"up\": 3\n        }\n        \n        if (this.right && this.x < 1950) {\n            this.dir = dir[\"right\"];\n            this.trotting += this.speed;\n            this.x += 3;\n        } else if (this.left && this.x > -460) {\n            this.dir = dir[\"left\"];\n            this.trotting += this.speed;\n            this.x -= 3;\n        } else if (this.down && this.y < 1925) {\n            this.dir = dir[\"down\"];\n            this.trotting += this.speed;\n            this.y += 3;\n        } else if (this.up && this.y > -500) {\n            this.dir = dir[\"up\"];\n            this.trotting += this.speed;\n            this.y -= 3;\n        }\n    }\n}\n\nexport default Leo;\n","class Util {\n    constructor(leo, game) {\n        document.addEventListener('keydown', e => {\n            e.preventDefault();\n            switch (e.keyCode) {\n                case 39:\n                   leo.right = true\n                    break\n                case 37:\n                    leo.left = true;\n                    break\n                case 40:\n                    leo.down = true\n                    break\n                case 38:\n                    leo.up = true\n                    break\n            }\n        });\n\n        document.addEventListener('keyup', e => {\n            e.preventDefault();\n            switch (e.keyCode) {\n                case 39:\n                    leo.right = false;\n                    break;\n                case 37:\n                    leo.left = false;\n                    break;\n                case 40:\n                    leo.down = false;\n                    break;\n                case 38:\n                    leo.up = false;\n                    break;\n            }\n        });\n    }\n}\n\nexport default Util;"],"names":["constructor","leo","map","this","storyline","foundPolly","foundHewert","currentPos","pollysHouse","hewertsHouse","storylines","document","addEventListener","instructions","querySelector","playButton","restartButton","canvasEl","getElementById","ctx","getContext","width","height","imageSmoothingEnabled","game","canvasElWidth","canvasElHeight","magnify","xPos","yPos","Image","src","house","xCollision","baseWidth","yCollision","baseHeight","draw","mapSize","drawImage","render","leoDx","leoDy","x","y","size","dir","trotting","speed","right","left","down","up","spriteSize","trot","Math","floor","story","Story","points","e","preventDefault","keyCode","won","restart","animate","console","log","window","cancelAnimationFrame","animationId","clearRect","requestAnimationFrame","style","visibility","Buttonstyle"],"sourceRoot":""}